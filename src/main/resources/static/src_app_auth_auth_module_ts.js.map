{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":"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","sources":["./src/app/auth/auth.module.ts","./src/app/auth/components/auth/auth.component.ts","./src/app/auth/components/auth/auth.component.html","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/auth/components/signup/signup.component.ts","./src/app/auth/components/signup/signup.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { MaterialUiModule } from '../material-ui/material-ui.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  { path: '', component: AuthComponent,\n    children: [\n      { path: 'login', component: LoginComponent },\n      { path: 'signup', component: SignupComponent },\n    ],\n  },\n];\n\n@NgModule({\n  declarations: [\n    SignupComponent,\n    LoginComponent,\n    AuthComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MaterialUiModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.sass']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.sass']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm?: UntypedFormGroup;\n  isLogin: Observable<boolean> | undefined;\n\n  constructor(private formBuilder: UntypedFormBuilder, private router: Router, private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: [ '', [ Validators.required ]],\n      password: [ '', [ Validators.required ]],\n    });\n    this.isLogin = this.auth.isLoggedIn;\n  }\n\n  loginSubmit() {\n    this.auth.login(this.loginForm?.value).subscribe({\n      next: () => {\n        this.loginForm?.reset();\n        this.router.navigate(['main']);\n      },\n      error: err => alert(err.message)\n    });\n  }\n\n}\n","<div class=\"container\">\n  <mat-card class=\"login-form\">\n    <mat-card-title>Login</mat-card-title>\n    <mat-divider inset></mat-divider>\n    <form *ngIf=\"loginForm\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginSubmit()\">\n      <mat-card-content class=\"form-inputs\">\n        <mat-form-field appearance=\"legacy\">\n          <mat-label>Username</mat-label>\n          <input class=\"input-field\" matInput placeholder=\"enter username...\" type=\"text\" formControlName=\"username\" required>\n          <mat-hint>username</mat-hint>\n        </mat-form-field>\n        <mat-form-field appearance=\"legacy\">\n          <mat-label>Password</mat-label>\n          <input class=\"input-field\" matInput placeholder=\"enter password...\" type=\"password\" formControlName=\"password\" required>\n          <mat-hint>password</mat-hint>\n        </mat-form-field>\n      </mat-card-content>\n      <mat-card-actions class=\"btn-group\">\n        <button mat-raised-button color=\"accent\" type=\"button\" routerLink=\"/auth/signup\">SignUp</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"loginForm.invalid\">Login</button>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.sass']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm?: UntypedFormGroup;\n  // isLogin: Observable<boolean> | undefined;\n\n  constructor(private formBuilder: UntypedFormBuilder, private router: Router, private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.signupForm = this.formBuilder.group({\n      username: [ '', [ Validators.required ]],\n      password: [ '', [ Validators.required ]],\n      email: [ '', [ Validators.required, Validators.email ]],\n      firstName: [ '' ],\n      lastName: [ '' ],\n      phone: [ '' ],\n    });\n  }\n\n  signupSubmit() {\n    this.auth.signup(this.signupForm?.value).subscribe({\n      next: () => {\n        this.signupForm?.reset();\n        this.router.navigate(['/auth/login']);\n      },\n      error: err => alert(err.message)\n    });\n  }\n}\n","<div class=\"container\">\n  <mat-card class=\"login-form\">\n    <mat-card-title>Sign Up</mat-card-title>\n    <mat-divider inset></mat-divider>\n    <form *ngIf=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"signupSubmit()\">\n      <mat-card-content class=\"form-inputs\">\n        <mat-form-field appearance=\"legacy\">\n          <mat-label>Username</mat-label>\n          <input class=\"input-field\" matInput placeholder=\"enter username...\" type=\"text\" formControlName=\"username\" required>\n          <mat-hint>username</mat-hint>\n        </mat-form-field>\n        <mat-form-field appearance=\"legacy\">\n          <mat-label>Password</mat-label>\n          <input class=\"input-field\" matInput placeholder=\"enter password...\" type=\"password\" formControlName=\"password\" required>\n          <mat-hint>password</mat-hint>\n        </mat-form-field>\n        <mat-form-field appearance=\"legacy\">\n          <mat-label>Email</mat-label>\n          <input class=\"input-field\" matInput placeholder=\"enter email...\" type=\"email\" formControlName=\"email\" required>\n          <mat-hint>password</mat-hint>\n        </mat-form-field>\n        <mat-form-field appearance=\"legacy\">\n          <mat-label>First name</mat-label>\n          <input class=\"input-field\" matInput placeholder=\"enter first name...\" type=\"text\" formControlName=\"firstName\">\n          <mat-hint>first name</mat-hint>\n        </mat-form-field>\n        <mat-form-field appearance=\"legacy\">\n          <mat-label>Last name</mat-label>\n          <input class=\"input-field\" matInput placeholder=\"enter last name...\" type=\"text\" formControlName=\"lastName\">\n          <mat-hint>last name</mat-hint>\n        </mat-form-field>\n        <mat-form-field appearance=\"legacy\">\n          <mat-label>Phone</mat-label>\n          <input class=\"input-field\" matInput placeholder=\"enter last name...\" type=\"text\" formControlName=\"phone\">\n          <mat-hint>phonee</mat-hint>\n        </mat-form-field>\n      </mat-card-content>\n      <mat-card-actions class=\"btn-group\">\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"signupForm.invalid\">Sign Up</button>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n</div>"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}